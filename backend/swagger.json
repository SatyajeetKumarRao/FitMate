{
  "openapi": "3.0.0",
  "info": {
    "title": "Fitness Application API",
    "description": "API for all routes of the application with authentication",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://tungabhadra-recursion-038.onrender.com/"
    }
  ],
  "paths": {
    "/users/register": {
      "post": {
        "summary": "User registration",
        "tags": ["Users"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "John Doe"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "user@gmail.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "123"
                  },
                  "height": {
                    "type": "number",
                    "example": 170
                  },
                  "initialWeight": {
                    "type": "number",
                    "example": 75
                  },
                  "dob": {
                    "type": "string",
                    "format": "date",
                    "example": "2000-01-01"
                  },
                  "gender": {
                    "type": "string",
                    "example": "male"
                  },
                  "goals": {
                    "type": "object",
                    "properties": {
                      "targetWeight": {
                        "type": "number",
                        "example": 60
                      },
                      "goal": {
                        "type": "string",
                        "enum": ["Lose weight", "Maintain weight", "Gain weight"],
                        "example": "Lose weight"
                      },
                      "activityLevel": {
                        "type": "string",
                        "enum": ["Sedentary", "Lightly Active", "Moderately Active", "Very Active"],
                        "example": "Moderately Active"
                      }
                    }
                  }
                },
                "required": ["name", "email", "password", "height", "initialWeight", "dob", "gender", "goals"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "New user has been registered",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "userId": {
                          "type": "string",
                          "description": "User ID"
                        },
                        "email": {
                          "type": "string",
                          "format": "email",
                          "description": "User email"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "description": "Success message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "User already exists"
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "summary": "User login",
        "tags": ["Users"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "user@example.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "password123"
                  }
                },
                "required": ["email", "password"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User logged in successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "accessToken": {
                      "type": "string",
                      "description": "JWT access token for authentication"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "userId": {
                          "type": "string",
                          "description": "User ID"
                        },
                        "email": {
                          "type": "string",
                          "format": "email",
                          "description": "User email"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "description": "Success message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid email or password"
          }
        }
      }
    },
    "/users/": {
      "get": {
        "summary": "Get user by ID",
        "tags": ["Users"],
        "responses": {
          "200": {
            "description": "User details retrieved successfully"
          },
          "401": {
            "description": "Unauthorized: Access token required"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/users/updateProfile": {
      "patch": {
        "summary": "Update user profile",
        "tags": ["Users"],
        "responses": {
          "200": {
            "description": "User profile updated successfully"
          },
          "401": {
            "description": "Unauthorized: Access token required"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/meals/addMeal": {
      "post": {
        "summary": "Add Meal",
        "tags": ["Meals"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "foods": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "food": {
                          "type": "string",
                          "description": "ID of the food item"
                        },
                        "quantity": {
                          "type": "number",
                          "description": "Quantity of the food item"
                        }
                      },
                      "required": ["food", "quantity"]
                    }
                  }
                },
                "required": ["foods"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "New Meal Added",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Success message"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "mealId": {
                          "type": "string",
                          "description": "meal ID"
                        },
                        "food": {
                          "type": "array",
                          "description": "User meal"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "200": {
            "description": "Meal Updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Success message"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "description": "Success message"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "mealId": {
                              "type": "string",
                              "description": "meal ID"
                            },
                            "food": {
                              "type": "array",
                              "description": "User meal"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean",
                      "description": "Indicates if an error occurred"
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/meals": {
      "get": {
        "summary": "Get Meals",
        "tags": ["Meals"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of Meal retrieved successfully"
          },
          "401": {
            "description": "Unauthorized: Access token required"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/meals/*": {
      "all": {
        "summary": "Invalid Route",
        "description": "Handles all invalid routes for meals",
        "responses": {
          "404": {
            "description": "Invalid route"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "Users": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the user"
          },
          "email": {
            "type": "string",
            "description": "Email of the user",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "Password of the user"
          },
          "height": {
            "type": "number",
            "description": "Height of the user"
          },
          "initialWeight": {
            "type": "number",
            "description": "Initial weight of the user"
          },
          "currentWeight": {
            "type": "number",
            "description": "Current weight of the user"
          },
          "dob": {
            "type": "string",
            "description": "Date of birth of the user",
            "format": "date"
          },
          "gender": {
            "type": "string",
            "description": "Gender of the user",
            "enum": ["male", "female"]
          },
          "goals": {
            "type": "object",
            "properties": {
              "targetWeight": {
                "type": "number",
                "description": "Target weight of the user"
              },
              "goal": {
                "type": "string",
                "description": "User's goal",
                "enum": ["Lose weight", "Maintain weight", "Gain weight"]
              },
              "activityLevel": {
                "type": "string",
                "description": "User's activity level",
                "enum": [
                  "Sedentary",
                  "Lightly Active",
                  "Moderately Active",
                  "Very Active"
                ]
              }
            }
          },
          "tdee": {
            "type": "number",
            "description": "Total Daily Energy Expenditure (TDEE) of the user"
          },
          "targetTdee": {
            "type": "number",
            "description": "Target Total Daily Energy Expenditure (TDEE) of the user"
          },
          "friends": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "IDs of the user's friends"
            }
          },
          "cumulativeNetCalories": {
            "type": "number",
            "description": "Cumulative net calories of the user"
          }
        },
        "required": [
          "name",
          "email",
          "password",
          "height",
          "initialWeight",
          "currentWeight",
          "dob",
          "gender",
          "goals",
          "tdee",
          "targetTdee",
          "cumulativeNetCalories"
        ]
      },
      "Meals": {
        "type": "object",
        "properties": {
          "user": {
            "type": "string",
            "description": "User ID"
          },
          "date": {
            "type": "string",
            "description": "Date of the meal",
            "format": "date-time"
          },
          "foods": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "food": {
                  "type": "string",
                  "description": "ID of the food item"
                },
                "quantity": {
                  "type": "number",
                  "description": "Quantity of the food item"
                }
              },
              "required": ["food", "quantity"]
            }
          }
        },
        "required": ["user", "date", "foods"]
      }
    }
  }
}
